{"version":3,"sources":["scripts/main.js"],"names":["score","best","rows","columns","board","Array","from","length","fill","start","document","getElementById","restart","reStart","style","display","setStart","elements","getElementsByClassName","addEventListener","handleKeyUp","parentNode","removeChild","classList","add","setGame","columnId","rowID","number","Math","floor","random","includes","push","forEach","numberColumn","numberRow","r","c","tile","createElement","id","toString","updateTile","append","innerText","isGameOver","i","j","hasEmptyTile","hasZero","row","cell","setTwo","found","num","value","remove","e","code","slideLeft","slideRight","slideUp","slideDown","Error","filterZero","filter","slide","rowSecond","reverse","window","onload"],"mappings":"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","file":"main.67e1d3c0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet score = 0;\nlet best = 0;\nconst rows = 4;\nconst columns = 4;\nlet board = Array.from({ length: rows }, () => new Array(columns).fill(0));\nconst start = document.getElementById('startbutton');\nconst restart = document.getElementById('restartbutton');\n\nwindow.onload = function() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      document.getElementById('board').append(tile);\n    }\n  }\n\n  restart.style.display = 'none';\n};\n\nstart.addEventListener('click', setStart);\nrestart.addEventListener('click', reStart);\n\nfunction reStart() {\n  restart.style.display = 'none';\n\n  setStart();\n\n  document.getElementById('startbutton').style.display = 'flex';\n  document.getElementById('restartbutton').style.display = 'none';\n}\n\nfunction setStart() {\n  const elements = document.getElementsByClassName('tile');\n\n  document.addEventListener('keyup', handleKeyUp);\n\n  while (elements.length > 0) {\n    elements[0].parentNode.removeChild(elements[0]);\n  }\n\n  board = Array.from({ length: rows }, () => new Array(columns).fill(0));\n\n  document.getElementById('loser').classList.add('hidden');\n  document.getElementById('winner').classList.add('hidden');\n  document.getElementById('start').classList.add('hidden');\n  document.getElementById('startbutton').style.display = 'none';\n  document.getElementById('restartbutton').style.display = 'flex';\n\n  setGame();\n}\n\nfunction setGame() {\n  const columnId = [];\n  const rowID = [];\n\n  while (columnId.length < 1) {\n    const number = Math.floor(Math.random() * 4);\n\n    if (!columnId.includes(number) && !rowID.includes(number)) {\n      columnId.push(number);\n    }\n  }\n\n  while (rowID.length < 1) {\n    const number = Math.floor(Math.random() * 4);\n\n    if (!columnId.includes(number) && !rowID.includes(number)) {\n      rowID.push(number);\n    }\n  }\n\n  columnId.forEach((numberColumn) => {\n    rowID.forEach((numberRow) => {\n      board[numberColumn][numberRow] = 2;\n      board[numberRow][numberColumn] = 2;\n    });\n  });\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      document.getElementById('board').append(tile);\n    }\n  }\n\n  score = 0;\n  document.getElementById('score').innerText = score;\n}\n\nfunction isGameOver() {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (board[i][j] === 0) {\n        return false;\n      }\n\n      if (i > 0 && board[i][j] === board[i - 1][j]) {\n        return false;\n      }\n\n      if (j > 0 && board[i][j] === board[i][j - 1]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction hasEmptyTile() {\n  let hasZero = false;\n\n  board.forEach(row => {\n    row.forEach(cell => {\n      if (cell === 0) {\n        hasZero = true;\n      }\n    });\n  });\n\n  return hasZero;\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = 2;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = '2';\n\n      tile.classList.add('x2');\n\n      found = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('tile');\n\n  if (num > 0) {\n    tile.innerText = num;\n\n    if (num <= 4096) {\n      tile.classList.add('x' + num.toString());\n    } else {\n      tile.classList.add('x8192');\n    }\n  }\n\n  if (num === 2048) {\n    document.getElementById('winner').classList.remove('hidden');\n    document.getElementById('start').classList.add('hidden');\n    document.getElementById('loser').classList.add('hidden');\n    document.getElementById('startbutton').style.display = 'flex';\n    document.getElementById('restartbutton').style.display = 'none';\n  }\n}\n\nfunction handleKeyUp(e) {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setTwo();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setTwo();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setTwo();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setTwo();\n  }\n\n  if (isGameOver()) {\n    document.getElementById('loser').classList.add('hidden');\n    document.getElementById('winner').classList.add('hidden');\n    document.getElementById('start').classList.remove('hidden');\n    document.getElementById('startbutton').style.display = 'unset';\n    document.getElementById('restartbutton').style.display = 'none';\n    throw new Error('Something went wrong.');\n  }\n\n  document.getElementById('score').innerText = score;\n  document.getElementById('best').innerText = best;\n}\n\nfunction filterZero(row) {\n  return row.filter((number) => {\n    return number !== 0;\n  });\n}\n\nfunction slide(row) {\n  document.getElementById('restartbutton').style.display = 'flex';\n  document.getElementById('startbutton').style.display = 'none';\n\n  let rowSecond = filterZero(row);\n\n  rowSecond.forEach((value, i) => {\n    if (i < rowSecond.length - 1 && rowSecond[i] === rowSecond[i + 1]) {\n      rowSecond[i] *= 2;\n      rowSecond[i + 1] = 0;\n\n      score += rowSecond[i];\n\n      if (score > best) {\n        best = score;\n      }\n    }\n  });\n\n  rowSecond = filterZero(rowSecond);\n\n  while (rowSecond.length < columns) {\n    rowSecond.push(0);\n  }\n\n  return rowSecond;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n    board[0][c] = row[0];\n    board[1][c] = row[1];\n    board[2][c] = row[2];\n    board[3][c] = row[3];\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n    board[0][c] = row[0];\n    board[1][c] = row[1];\n    board[2][c] = row[2];\n    board[3][c] = row[3];\n\n    for (let r = 0; r < rows; r++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n"]}